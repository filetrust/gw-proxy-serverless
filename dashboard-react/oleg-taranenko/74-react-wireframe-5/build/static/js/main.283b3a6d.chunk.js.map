{"version":3,"sources":["logo.svg","components/newProductTable/index.js","components/newKeySuccess/index.js","components/profitabilityTable/index.js","components/roadMap/index.js","components/product/index.js","components/keySuccess/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NewProductTable","Table","celled","style","width","Header","Row","HeaderCell","Body","Cell","Footer","colSpan","Menu","floated","pagination","Item","as","icon","Icon","name","description","join","NewKeySuccess","Card","fluid","Content","header","height","ProfitabilityTable","RoadMap","useState","current","setCurrent","className","map","month","index","key","onClick","data-toggle","aria-expanded","Product","KeySuccess","App","Container","value","Col","md","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iJAAAA,EAAOC,QAAU,IAA0B,kC,iRC0D5BC,EAvDS,kBACtB,kBAACC,EAAA,EAAD,CAAOC,QAAM,EAACC,MAAO,CAAEC,MAAO,SAC5B,kBAACH,EAAA,EAAMI,OAAP,KACE,kBAACJ,EAAA,EAAMK,IAAP,KACE,kBAACL,EAAA,EAAMM,WAAP,oBACc,6BADd,YAGA,kBAACN,EAAA,EAAMM,WAAP,mBACa,6BADb,WAGA,kBAACN,EAAA,EAAMM,WAAP,oBACc,6BADd,qBAMJ,kBAACN,EAAA,EAAMO,KAAP,KACE,kBAACP,EAAA,EAAMK,IAAP,KACE,kBAACL,EAAA,EAAMQ,KAAP,kBACA,kBAACR,EAAA,EAAMQ,KAAP,aACA,kBAACR,EAAA,EAAMQ,KAAP,cAEF,kBAACR,EAAA,EAAMK,IAAP,KACE,kBAACL,EAAA,EAAMQ,KAAP,kBACA,kBAACR,EAAA,EAAMQ,KAAP,aACA,kBAACR,EAAA,EAAMQ,KAAP,cAEF,kBAACR,EAAA,EAAMK,IAAP,KACE,kBAACL,EAAA,EAAMQ,KAAP,kBACA,kBAACR,EAAA,EAAMQ,KAAP,aACA,kBAACR,EAAA,EAAMQ,KAAP,eAIJ,kBAACR,EAAA,EAAMS,OAAP,KACE,kBAACT,EAAA,EAAMK,IAAP,KACE,kBAACL,EAAA,EAAMM,WAAP,CAAkBI,QAAQ,KACxB,kBAACC,EAAA,EAAD,CAAMC,QAAQ,QAAQC,YAAU,GAC9B,kBAACF,EAAA,EAAKG,KAAN,CAAWC,GAAG,IAAIC,MAAI,GACpB,kBAACC,EAAA,EAAD,CAAMC,KAAK,kBAEb,kBAACP,EAAA,EAAKG,KAAN,CAAWC,GAAG,KAAd,KACA,kBAACJ,EAAA,EAAKG,KAAN,CAAWC,GAAG,KAAd,KACA,kBAACJ,EAAA,EAAKG,KAAN,CAAWC,GAAG,KAAd,KACA,kBAACJ,EAAA,EAAKG,KAAN,CAAWC,GAAG,KAAd,KACA,kBAACJ,EAAA,EAAKG,KAAN,CAAWC,GAAG,IAAIC,MAAI,GACpB,kBAACC,EAAA,EAAD,CAAMC,KAAK,yB,SC9CnBC,EAAc,CAAC,mCAAmCC,KAAK,KAU9CC,EARO,kBACpB,kBAACC,EAAA,EAAD,CAAMC,OAAK,GACT,kBAACD,EAAA,EAAKE,QAAN,CAAcC,OAAO,6CACrB,kBAACH,EAAA,EAAKE,QAAN,CAAcL,YAAaA,IAC3B,yBAAKjB,MAAO,CAAEwB,OAAQ,SCuCXC,EA7CY,kBACzB,kBAAC3B,EAAA,EAAD,CAAOC,QAAM,GACX,kBAACD,EAAA,EAAMI,OAAP,KACE,kBAACJ,EAAA,EAAMK,IAAP,KACE,kBAACL,EAAA,EAAMM,WAAP,gBACA,kBAACN,EAAA,EAAMM,WAAP,mBAIJ,kBAACN,EAAA,EAAMO,KAAP,KACE,kBAACP,EAAA,EAAMK,IAAP,KACE,kBAACL,EAAA,EAAMQ,KAAP,kBACA,kBAACR,EAAA,EAAMQ,KAAP,eAEF,kBAACR,EAAA,EAAMK,IAAP,KACE,kBAACL,EAAA,EAAMQ,KAAP,kBACA,kBAACR,EAAA,EAAMQ,KAAP,cAEF,kBAACR,EAAA,EAAMK,IAAP,KACE,kBAACL,EAAA,EAAMQ,KAAP,kBACA,kBAACR,EAAA,EAAMQ,KAAP,eAIJ,kBAACR,EAAA,EAAMS,OAAP,KACE,kBAACT,EAAA,EAAMK,IAAP,KACE,kBAACL,EAAA,EAAMM,WAAP,CAAkBI,QAAQ,KACxB,kBAACC,EAAA,EAAD,CAAMC,QAAQ,QAAQC,YAAU,GAC9B,kBAACF,EAAA,EAAKG,KAAN,CAAWC,GAAG,IAAIC,MAAI,GACpB,kBAACC,EAAA,EAAD,CAAMC,KAAK,kBAEb,kBAACP,EAAA,EAAKG,KAAN,CAAWC,GAAG,KAAd,KACA,kBAACJ,EAAA,EAAKG,KAAN,CAAWC,GAAG,KAAd,KACA,kBAACJ,EAAA,EAAKG,KAAN,CAAWC,GAAG,KAAd,KACA,kBAACJ,EAAA,EAAKG,KAAN,CAAWC,GAAG,KAAd,KACA,kBAACJ,EAAA,EAAKG,KAAN,CAAWC,GAAG,IAAIC,MAAI,GACpB,kBAACC,EAAA,EAAD,CAAMC,KAAK,yB,gBCrCV,SAASU,IACtB,IADgC,EAEFC,mBAAS,GAFP,mBAEzBC,EAFyB,KAEhBC,EAFgB,KAGhC,OACE,wBAAIC,UAAU,uBAHD,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,UAItDC,KAAI,SAACC,EAAOC,GAClB,OACE,wBACEC,IAAKF,EACLF,UACEG,GAASL,EAAU,SAAWK,EAAQL,EAAU,YAAc,GAEhEO,QAAS,kBAAMN,EAAWI,KAE1B,uBAAGG,cAAY,MAAMC,gBAAc,SAChCL,Q,OCfA,SAASM,EAAT,GAA4B,IAATtB,EAAQ,EAARA,KAChC,OACE,yBAAKc,UAAU,gBACb,yBAAKA,UAAU,qBAAqBd,GACpC,yBAAKc,UAAU,uB,OCJN,SAASS,IACtB,OACE,yBAAKT,UAAU,eACb,yBAAKA,UAAU,sBAAf,0BACA,yBAAKA,UAAU,yBCqDNU,MA7Cf,WACE,OACE,yBAAKV,UAAU,OACb,kBAACW,EAAA,EAAD,KACE,kBAACtC,EAAA,EAAD,CAAK2B,UAAU,QACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,SAAf,eACA,yBAAKA,UAAU,SAAf,YAEF,yBAAKA,UAAU,UAAU9B,MAAO,CAAEwB,OAAQ,MACxC,kBAAC,IAAD,CAAkBkB,MAAO,QAG7B,kBAACvC,EAAA,EAAD,KACE,kBAACuB,EAAD,OAEF,yBAAKI,UAAU,YACb,kBAACQ,EAAD,CAAStB,KAAK,cACd,kBAACsB,EAAD,CAAStB,KAAK,cACd,kBAACsB,EAAD,CAAStB,KAAK,eAEhB,yBAAKc,UAAU,YAAf,2BACA,kBAAC3B,EAAA,EAAD,KACE,kBAACwC,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,EAAD,OAEF,kBAACD,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,EAAD,QAGJ,yBAAKd,UAAU,YAAf,qCAEA,kBAAC3B,EAAA,EAAD,KACE,kBAACwC,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,EAAD,OAEF,kBAACD,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACL,EAAD,WCvCQM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.283b3a6d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport { Icon, Label, Menu, Table } from 'semantic-ui-react';\n\nconst NewProductTable = () => (\n  <Table celled style={{ width: '100%' }}>\n    <Table.Header>\n      <Table.Row>\n        <Table.HeaderCell>\n          IMPROVEMENT <br /> PROJECT\n        </Table.HeaderCell>\n        <Table.HeaderCell>\n          INVESTMENT <br /> NEEDED\n        </Table.HeaderCell>\n        <Table.HeaderCell>\n          SPECIALTIVE <br /> VS CLIENT RECT\n        </Table.HeaderCell>\n      </Table.Row>\n    </Table.Header>\n\n    <Table.Body>\n      <Table.Row>\n        <Table.Cell>Project 1</Table.Cell>\n        <Table.Cell>34.2</Table.Cell>\n        <Table.Cell>48.2</Table.Cell>\n      </Table.Row>\n      <Table.Row>\n        <Table.Cell>Project 2</Table.Cell>\n        <Table.Cell>83.7</Table.Cell>\n        <Table.Cell>53.4</Table.Cell>\n      </Table.Row>\n      <Table.Row>\n        <Table.Cell>Project 3</Table.Cell>\n        <Table.Cell>53.5</Table.Cell>\n        <Table.Cell>36.3</Table.Cell>\n      </Table.Row>\n    </Table.Body>\n\n    <Table.Footer>\n      <Table.Row>\n        <Table.HeaderCell colSpan=\"3\">\n          <Menu floated=\"right\" pagination>\n            <Menu.Item as=\"a\" icon>\n              <Icon name=\"chevron left\" />\n            </Menu.Item>\n            <Menu.Item as=\"a\">1</Menu.Item>\n            <Menu.Item as=\"a\">2</Menu.Item>\n            <Menu.Item as=\"a\">3</Menu.Item>\n            <Menu.Item as=\"a\">4</Menu.Item>\n            <Menu.Item as=\"a\" icon>\n              <Icon name=\"chevron right\" />\n            </Menu.Item>\n          </Menu>\n        </Table.HeaderCell>\n      </Table.Row>\n    </Table.Footer>\n  </Table>\n);\n\nexport default NewProductTable;\n","import React from 'react';\nimport { Card, Icon } from 'semantic-ui-react';\n\nconst description = ['Key Risks + Successful Planning'].join(' ');\n\nconst NewKeySuccess = () => (\n  <Card fluid>\n    <Card.Content header=\"Key Success, Warranties, Capacity Issues\" />\n    <Card.Content description={description} />\n    <div style={{ height: 160 }}></div>\n  </Card>\n);\n\nexport default NewKeySuccess;\n","import React from 'react';\nimport { Icon, Label, Menu, Table } from 'semantic-ui-react';\n\nconst ProfitabilityTable = () => (\n  <Table celled>\n    <Table.Header>\n      <Table.Row>\n        <Table.HeaderCell>Product</Table.HeaderCell>\n        <Table.HeaderCell>Margin %</Table.HeaderCell>\n      </Table.Row>\n    </Table.Header>\n\n    <Table.Body>\n      <Table.Row>\n        <Table.Cell>Product 1</Table.Cell>\n        <Table.Cell>11.21</Table.Cell>\n      </Table.Row>\n      <Table.Row>\n        <Table.Cell>Product 2</Table.Cell>\n        <Table.Cell>8.53</Table.Cell>\n      </Table.Row>\n      <Table.Row>\n        <Table.Cell>Product 3</Table.Cell>\n        <Table.Cell>4.32</Table.Cell>\n      </Table.Row>\n    </Table.Body>\n\n    <Table.Footer>\n      <Table.Row>\n        <Table.HeaderCell colSpan=\"3\">\n          <Menu floated=\"right\" pagination>\n            <Menu.Item as=\"a\" icon>\n              <Icon name=\"chevron left\" />\n            </Menu.Item>\n            <Menu.Item as=\"a\">1</Menu.Item>\n            <Menu.Item as=\"a\">2</Menu.Item>\n            <Menu.Item as=\"a\">3</Menu.Item>\n            <Menu.Item as=\"a\">4</Menu.Item>\n            <Menu.Item as=\"a\" icon>\n              <Icon name=\"chevron right\" />\n            </Menu.Item>\n          </Menu>\n        </Table.HeaderCell>\n      </Table.Row>\n    </Table.Footer>\n  </Table>\n);\n\nexport default ProfitabilityTable;\n","import React, { useState } from 'react';\nimport './style.scss';\nexport default function RoadMap() {\n  const months = ['Month1', 'Month2', 'Month3', 'Month4', 'Month5', 'Month6'];\n  const [current, setCurrent] = useState(0);\n  return (\n    <ul className=\"nav nav-tabs wizard\">\n      {months.map((month, index) => {\n        return (\n          <li\n            key={month}\n            className={\n              index == current ? 'active' : index < current ? 'completed' : ''\n            }\n            onClick={() => setCurrent(index)}\n          >\n            <a data-toggle=\"tab\" aria-expanded=\"false\">\n              {month}\n            </a>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","import React from 'react';\nimport './style.scss';\nexport default function Product({ name }) {\n  return (\n    <div className=\"product-line\">\n      <div className=\"product-line-name\">{name}</div>\n      <div className=\"product-line-desc\"></div>\n    </div>\n  );\n}\n","import React from 'react';\nimport './style.scss';\nexport default function KeySuccess() {\n  return (\n    <div className=\"key-success\">\n      <div className=\"key-success-header\">KEY SUCCESS THIS MONTH</div>\n      <div className=\"key-success-content\"></div>\n    </div>\n  );\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport ReactSpeedometer from 'react-d3-speedometer';\nimport { Row, Col, Container } from 'reactstrap';\nimport NewProductTable from './components/newProductTable';\nimport NewKeySuccess from './components/newKeySuccess';\nimport ProfitabilityTable from './components/profitabilityTable';\nimport RoadMap from './components/roadMap';\nimport Product from './components/product';\nimport KeySuccess from './components/keySuccess';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container>\n        <Row className=\"mt-5\">\n          <div className=\"mt-1\">\n            <div className=\"title\">Engineering</div>\n            <div className=\"title\">Roadmap</div>\n          </div>\n          <div className=\"ml-auto\" style={{ height: 200 }}>\n            <ReactSpeedometer value={500} />\n          </div>\n        </Row>\n        <Row>\n          <RoadMap />\n        </Row>\n        <div className=\"products\">\n          <Product name=\"Product 1\" />\n          <Product name=\"Product 2\" />\n          <Product name=\"Product 3\" />\n        </div>\n        <div className=\"subtitle\">New Product Development</div>\n        <Row>\n          <Col md={6}>\n            <NewProductTable />\n          </Col>\n          <Col md={6}>\n            <NewKeySuccess />\n          </Col>\n        </Row>\n        <div className=\"subtitle\">Profitability Per Product/Service</div>\n\n        <Row>\n          <Col md={6}>\n            <ProfitabilityTable />\n          </Col>\n          <Col md={6}>\n            <KeySuccess />\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}